syntax="proto3";

enum WarehouseType {
  BIGQUERY = 1;
  REDSHIFT = 2;
  SNOWFLAKE = 3;
  POSTGRES = 4;
}

enum MaterializationType {
  VIEW = 1;
  TABLE = 2;
  INCREMENTAL = 3;
}

message Target {
  string schema = 1;
  string name = 2;
}

message Operation {
  string name = 1;
  repeated string dependencies = 2;

  repeated string statements = 6;
}

message Description {

}
message Materialization {
  string name = 1;
  repeated string dependencies = 2;

  string type = 3;
  Target target = 4;
  string query = 5;
  bool protected = 9;
  string partition_by = 10;

  map<string, string> descriptions = 16;

  // Incremental only.
  string where = 8;
  string unique_key = 15;

  // Pre/post hooks and assertions for convenience.
  repeated string pres = 13;
  repeated string posts = 14;
  repeated string assertions = 17;

  // Generated.
  repeated string parsed_columns = 12;
}

message Assertion {
  string name = 1;
  repeated string dependencies = 2;

  repeated string queries = 3;
}

message ExecutionTask {
  string type = 1;
  string statement = 2;
  bool ignore_errors = 3;
}

message ExecutionNode {
  string name = 1;
  repeated string dependencies = 3;
  repeated ExecutionTask tasks = 2;
}

message ExecutionGraph {
  ProjectConfig project_config = 1;
  RunConfig run_config = 2;
  repeated ExecutionNode nodes = 3;
}

message ExecutedTask {
  ExecutionTask task = 1;

  bool ok = 2;
  string error = 3;
  string test_results = 4;
}

message ExecutedNode {
  string name = 1;
  repeated ExecutedTask tasks = 2;

  bool ok = 3;
  bool skipped = 4;
}

message ExecutedGraph {
  ProjectConfig project_config = 1;
  RunConfig run_config = 2;

  repeated ExecutedNode nodes = 3;
}

message ProjectConfig {
  string warehouse = 1;
  string default_schema = 2;
  string assertion_schema = 5;

  repeated string dataset_paths = 3;
  repeated string include_paths = 4;

  map<string, string> dependencies = 6;
}

message RunConfig {
  repeated string nodes = 1;
  bool include_dependencies = 3;
  bool full_refresh = 2;
  bool carry_on = 4;
}
